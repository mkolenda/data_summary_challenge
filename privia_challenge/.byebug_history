exit
value
value.class
c
value.class
c
value.class
c
row.headers.zip(f)
f = row.fields.flatten
row.fields.flatten
row.fields
row
CONVERTER_SPLIT_PRICE_COUNT
c
value.lstrip if value.is_a? String
c
value.lstrip if value.is_a? String
c
value.lstrip if value.is_a? String
c
n
value.lstrip if value.is_a? String
value
exit
f.map {|field| field.lstrip }
f = row.fields.flatten[0..5]
f[0..5]
f[0..6]
f.last
f = row.fields.flatten
f
f.delete(nil)
f = row.fields.flatten
row.fields.flatten.pop
row.fields.flatten
exit
row.headers.zip(t)
t = f.map { |s| s.lstrip }
f = e.map { |s| s.to_s }
e.map { |s| s.lstrip }
e.map { |s| s.to_s }
e = row.fields.flatten
row.fields.flatten
exit
info.header
value
c
info.header
value
c
info.header
value
c
[ item_price.to_f, purchase_count.to_i ]
item_price, purchase_count = value.split
item_price, purchase_count
info.header
value
c
value
c
n
value.header
info.header
info
value
exit
p
p.each.to_s
p.each
p = row.fields.flatten
row.headers.zip(e).to_h
row.headers.zip(e)
e = row.fields.flatten
row.headers
row.fields.flatten
row.fields
row
c
exit
purchase_hash[:merchant_address] = purchase_hash[:purchase_count]
purchase_hash
purchase_hash[:count] = split_squished[1]
purchase_hash[:price] = split_squished[0]
split_squished = purchase_hash[:price].split(" ")
purchase_hash[:merchant_address] = purchase_hash[:count]
purchase_hash[:merchant_name] = purchase_hash[:merchant_address]
purchase_hash = row.to_hash
exit
row.inspect
row
c
row.class
exit
row
exit
exi
ugh.gsub(".0 ", ".0,")
ugh = row.to_param.inspect
row.to_param.inspect
row.to_param
row
